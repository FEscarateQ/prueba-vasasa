{"version":3,"sources":["components/CuentaPalabra.js","components/SumaSimple.js","VacasaTestApp.js","index.js"],"names":["CuentaPalabra","useState","inputValue","setinputValue","cantidadPalabras","setcantidadPalabras","cantidadVocales","setcantidadVocales","cantidadConsonantes","setcantidadConsonantes","useEffect","length","trim","split","text","match","contarVocales","contarConsonantes","type","onInput","e","target","value","input","SumaSimple","valoresaAgregados","setvaloresaAgregados","setInputValue","suma","setsuma","onSubmit","preventDefault","reset","valores","parseInt","defaultValue","onClick","map","valor","idx","VacasaTestApp","ReactDOM","render","document","getElementById"],"mappings":"0MAcaA,EAAgB,WACzB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgDF,mBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAsDN,mBAAS,GAA/D,mBAAOO,EAAP,KAA4BC,EAA5B,KAGAC,qBAAU,WACNR,EAAWS,OAAS,EAAKN,EAAmCH,EAnBpDU,OAAOC,MAAM,KAAKF,QAoBFN,EAAoB,GAE5CE,EAnBc,SAACO,GACnB,OAAOA,EAAKC,MAAM,iCAAoBD,EAAKC,MAAM,iCAAkBJ,OAAS,EAkBrDK,CAAcd,IACjCO,EAhBkB,SAACK,GACvB,OAAOA,EAAKC,MAAM,mCAAsBD,EAAKC,MAAM,mCAAoBJ,OAAS,EAerDM,CAAkBf,MAE1C,CAACA,IAQJ,OACI,qCACI,8BACI,iCACA,wEAEI,uBACIgB,KAAK,OACLC,QAbE,SAACC,GACnBjB,EAAciB,EAAEC,OAAOC,MAAMV,SAabW,MAAO,QAGX,4DAA6BnB,KAC7B,2DAA4BE,KAC5B,+DAAgCE,UAGxC,2B,OCnDG,SAASgB,IACpB,MAAkDvB,mBAAS,IAA3D,mBAAOwB,EAAP,KAA0BC,EAA1B,KACA,EAAoCzB,mBAAS,GAA7C,mBAAOC,EAAP,KAAmByB,EAAnB,KACA,EAAwB1B,mBAAS,GAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KAwBA,OACI,qCACI,gCAEI,uBAAMC,SApBK,SAACV,GACpBA,EAAEW,iBACuB,kBAAf7B,GAA0C,IAAfA,IACjCkB,EAAEC,OAAOW,QACTL,EAAc,GACdD,GAAqB,SAACO,GAAD,4BAAkBA,GAAlB,CAA2BC,SAAShC,QACzD2B,EAAQK,SAASN,GAAQM,SAAShC,MAc9B,UACI,8DAEA,uBACIgB,KAAK,SACLC,QA7BG,SAACC,GACpBO,EAAcO,SAASd,EAAEC,OAAOC,QAAU,IA6B1BC,MAAOrB,EACPiC,aAAc,QAGlB,wBAAQjB,KAAK,SAAb,qBACA,wBACIA,KAAK,SACLkB,QAAS,kBAtBzBV,EAAqB,IACrBC,EAAc,QACdE,EAAQ,IAkBI,wBAQAJ,EAAkBd,OAAS,GAC3B,6DAEKc,EAAkBY,KAAI,SAACC,EAAOC,GAC3B,OAAOA,EAAM,EAAN,YAAeD,GAAf,WAA6BA,MAExC,uBALJ,4BAM0BV,SAIlC,0BC3DL,IAAMY,EAAgB,WACzB,OACI,qCACI,4DACA,uBACA,cAAChB,EAAD,IACA,cAAC,EAAD,QCJZiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56530a50.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst contarPalabras = (text) => {\n    return text.trim().split(' ').length\n}\n\nconst contarVocales = (text) => {\n    return text.match(/[aeiouáéíóú]/gi) ? text.match(/[aeiouáéíóú]/gi).length : 0;\n}\n\nconst contarConsonantes = (text) => {\n    return text.match(/[^aeiouáéíóú ]/gi) ? text.match(/[^aeiouáéíóú ]/gi).length : 0;\n}\n\nexport const CuentaPalabra = () => {\n    const [inputValue, setinputValue] = useState('')\n    const [cantidadPalabras, setcantidadPalabras] = useState(0)\n    const [cantidadVocales, setcantidadVocales] = useState(0)\n    const [cantidadConsonantes, setcantidadConsonantes] = useState(0)\n\n    \n    useEffect(() => {\n        inputValue.length > 0 ?  setcantidadPalabras(contarPalabras(inputValue))\n                              : setcantidadPalabras(0)\n\n        setcantidadVocales(contarVocales(inputValue))\n        setcantidadConsonantes(contarConsonantes(inputValue))\n\n    }, [inputValue])\n\n\n    const handleOnInput = (e) => {\n        setinputValue(e.target.value.trim());\n    }\n    \n\n    return (\n        <>\n            <div>\n                <form>\n                <label>\n                    Ingresa cadena de texto a analizar: \n                    <input\n                        type=\"text\"\n                        onInput={handleOnInput}\n                        input={''}\n                    />\n                    </label>\n                    <p>{`Cantidad de palabras: ${cantidadPalabras}`}</p>\n                    <p>{`Cantidad de vocales: ${cantidadVocales}`}</p>\n                    <p>{`Cantidad de consonantes: ${cantidadConsonantes}`}</p>\n                </form>\n            </div>\n            <hr/>\n        </>\n    )\n}\n","import React, { useState } from 'react'\n\nexport default function SumaSimple() {\n    const [valoresaAgregados, setvaloresaAgregados] = useState([]);\n    const [inputValue, setInputValue] = useState(0);\n    const [suma, setsuma] = useState(0)\n\n\n\n    const handleOnChange = (e) => {\n        setInputValue(parseInt(e.target.value) || 0);\n    }\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if(typeof inputValue === 'number' && inputValue !== 0){\n            e.target.reset();\n            setInputValue(0);\n            setvaloresaAgregados((valores) => [ ...valores, parseInt(inputValue) ]);\n            setsuma(parseInt(suma) + parseInt(inputValue));\n        }\n    }\n\n    const handleLimpiar = (e) => {\n        setvaloresaAgregados([]);\n        setInputValue(0);\n        setsuma(0);\n    }\n\n    return (\n        <>\n            <div>\n                \n                <form onSubmit={handleOnSubmit}>\n                    <label>\n                        Ingresa valor para sumar: \n                    <input\n                        type=\"number\"\n                        onInput={(handleOnChange)}\n                        input={inputValue}\n                        defaultValue={''}\n                    />\n                    </label>\n                    <button type=\"submit\">Agregar</button>\n                    <button\n                        type=\"button\"\n                        onClick={() => handleLimpiar()}\n                    >\n                        Limpiar\n                    </button>\n                </form>\n                { \n                    valoresaAgregados.length > 0 && \n                    <p>\n                        Se han agregado los valores:  \n                        {valoresaAgregados.map((valor, idx) => {\n                            return idx > 0 ? `- ${valor}` : ` ${valor}`\n                        })}\n                        <br/>\n                        {`La suma total es: ${suma}`}\n                    </p>\n                }\n            </div>\n            <hr/>\n        </>\n    )\n}\n","import React from 'react'\nimport { CuentaPalabra } from './components/CuentaPalabra'\nimport SumaSimple from './components/SumaSimple'\n\nexport const VacasaTestApp = () => {\n    return (\n        <>\n            <h1>Prueba de código Vacasa</h1>\n            <hr/>\n            <SumaSimple/>\n            <CuentaPalabra/>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { VacasaTestApp } from './VacasaTestApp';\n\nReactDOM.render(\n  <VacasaTestApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}